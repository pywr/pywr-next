# Python workflow for building and testing wheels.

name: Python

on:
  push:
  pull_request:

jobs:
  windows:
    runs-on: windows-latest
    strategy:
      matrix:
        # We produce abi3-py310 wheels for Python 3.10 later.
        # If this is changed, then the PyO3 feature in the pywr-python/Cargo.toml file must also be updated.
        python-version: [ '3.10' ]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: swatinem/rust-cache@v2
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
      - uses: dtolnay/rust-toolchain@stable
      - name: Install the project
        run: uv sync --locked --all-extras --dev
      - name: Check formatting
        run: uv run ruff format --check
      - name: Run tests
        run: uv run pytest tests
      - name: Build the wheels
        run: uv build
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-win-${{ matrix.python-version }}-abi3
          path: dist

  linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # We produce abi3-py310 wheels for Python 3.10 later.
        # If this is changed, then the PyO3 feature in the pywr-python/Cargo.toml file must also be updated.
        python-version: [ '3.10' ]
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - uses: swatinem/rust-cache@v2
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
      - uses: dtolnay/rust-toolchain@stable
      - name: Install the project
        run: uv sync --locked --all-extras --dev
      - name: Check formatting
        run: uv run ruff format --check
      - name: Run tests
        run: uv run pytest tests
      - name: Build the wheels
        run: uv build
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.python-version }}-abi3
          path: dist

